<!DOCTYPE html>
<html>
<head>

  <style type="text/css">
  body{
  background-color: #2b2b2b;
  height: auto;
  width: auto;



  }



  #title{


    display: inline;
    color: #2c70d3;
    text-align: center;
  margin-left: 390px;

  }


  #header{
    background-color:  #660066;
    height: 70px;
    width: 1200px;
    margin-left: auto;
    margin-right: auto;
    border-radius: 10px;
    font-family: sans-serif;
  }



  #menu{
    display: inline;
    font-family: sans-serif;
    text-align: center;
  margin-left: 350px;
  }

  #two, #three, #four{
  text-align: center;
  font-family: sans-serif;
   display: inline;
   margin-left: 20px;

   margin-top:20px;

   color: white;
  }

  #one, #two, #three, #four{
  text-align: center;
   display: inline;


   margin-top:20px;

   color: white;
  }




  #container{
    height: 600px;
    width:895px;
    background-color: #660066;
    display: inline;
    float: right;
    border-radius: 10px;
  }

  #Username{
  display: inline;
    color: white;
margin-left: 90px;

    visibility: visible;
  }

  #signoutbut{
    float:right;
    visibility: hidden;


    border-style: 1px;
    border-color: #2c70d3;
    color: #2c70d3;

    padding: 5px 10px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 20px;
    border-radius: 10px;
    margin-right: 20px;
  }

  #footer{

    height: 70px;
    width: 1200px;
    margin-left: auto;
    margin-right: auto;
    border-radius: 10px;


  }
  a:link    {
    /* Applies to all unvisited links */
    color: black;
    text-decoration:  none;
    font-weight:      bold;


    }
  a:visited {
    /* Applies to all visited links */
    text-decoration:  none;
    color: black;
    font-weight:      bold;

    }
  a:hover   {
    /* Applies to links under the pointer */
    text-decoration:  none;
    color: black;
    font-weight:      bold;

    }
  a:active  {
    /* Applies to activated links */
    text-decoration:  none;
    color: black;
    font-weight:      bold;

    }

    #one, #two, #three, #four{

      display: inline;
      margin-left: 20px;
      margin-top:20px;
    }

    #submenu{
      margin-top: 20px;
      display: inline;
    }

    #join, #create, #leave{





      border-style: 1px;
      border-color: #2c70d3;
      color: #2c70d3;

      padding: 5px 10px;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      font-size: 20px;
      border-radius: 10px;
      visibility: visible;


    }

#teamkey{
  display: inline;
  float: right;
  color: white;
  margin-top: -0px;
  margin-right: 15px;

  border-style: 1px;
  border-color: #2c70d3;
  color: #2c70d3;

  padding: 5px 10px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 20px;
  border-radius: 10px;

}

#teamname{
  color: white;
  display: inline;
  height: 10px;
}

#roster{
  height: 150px;
  width: 895px;
  background-color: white;

}
#upcoming{
  height: 250px;
  width: 895px;
  background-color: white;
text-align: center;

}

#leave{

}
  </style>

  <script type="text/javascript">

  var Key;
  var username;
  var userId;
  var teamkeyy;
  var fortnite;
  var teamkey;
  var PSN;
  var psnarrau = [];
  var fortnitearrau = [];


  var array_name = [];
  function checkifusersignedin(){


var database = firebase.database();
    firebase.auth().onAuthStateChanged(function(user) {
      if (user) {
        // User is signed in.
        user= user;

document.getElementById("signoutbut").style.visibility = "visible"
document.getElementById("Username").style.visibility = "visible"
         userId = firebase.auth().currentUser.uid;
return firebase.database().ref(userId + '/Username/').once('value').then(function(snapshot) {
   username = snapshot.val();
  checkifonteam();
  loadpost();
  // ...
  return firebase.database().ref(userId + "/Fortnite/").once('value',function(snapshot)
  {
    fortnite = snapshot.val();

    return firebase.database().ref(userId + "/PSN/").once('value',function(snapshot)
    {
      PSN = snapshot.val();




  document.getElementById("Username").innerHTML = username;


});});});
      } else {
        // No user is signed in.

    }
  });
  }


    function checkifonteam(){


  var database = firebase.database();

  database.ref("/FortniteWagers" + "/Players/").once('value', function(snapshot) {
    if (snapshot.hasChild(userId)) {


            return firebase.database().ref("FortniteWagers" + "/Players/" + userId + "/teamcode/").once('value').then(function(snapshot) {
                teamkey = snapshot.val();


              // ...
              return firebase.database().ref("FortniteWagers" + "/Teams/" + teamkey + "/teamname/Teamname").once('value',function(snapshot)
              {
                  var teamnamee = snapshot.val();



              database.ref("FortniteWagers" + "/Teams/" + teamkey + "/players/").once('value',function(snap) {
                snap.forEach(function(item) {
                var itemVal = item.val();





              });
              for (i = 0; i < array_name.length; i++) {

        }




            });



});



});

    }else{

          window.location.href = "versus.htm";
    }
  });



    }

    function leaveteam(){

    var teamkey;
      return firebase.database().ref("FortniteWagers"  + "/Players/" + userId + "/teamcode/").once('value').then(function(snapshot) {
          teamkey = snapshot.val();

      firebase.database().ref("FortniteWagers"  + "/Players/" + userId).remove();
      firebase.database().ref("FortniteWagers" + '/Teams/' + teamkey + userId).remove();
      firebase.database().ref("FortniteWagers" + '/Teams/' + teamkey + "/Playerids/" + userId).remove();
      firebase.database().ref("FortniteWagers" + '/Teams/' + teamkey + "players" + username).remove();




      return firebase.database().ref("FortniteWagers" + '/Teams/' + teamkey + "/playercount/" + "/playercount/").once('value').then(function(snapshot) {
         var players = snapshot.val();
         var x = Number(players);
         var y = x-1;

        if((x-1) == 0)
        {
          firebase.database().ref("FortniteWagers" + '/Teams/' + teamkey).remove();


      }
        else{
          firebase.database().ref("FortniteWagers" + '/Teams/' + teamkey + "/playercount/").set({
           playercount: y,

          });

          firebase.database().ref("FortniteWagers" + '/Teams/' + teamkey + "/Exist/").set({
           Exist: true,

          });

        }
    });
    });



    //inset reload page
    }

  function jointeam(){
  var text;
    var lol;


       text = prompt("Team Code");

      return firebase.database().ref("FortniteWagers" + '/Teams/' + text + "/Exist/Exist/").once('value').then(function(snapshot) {
         lol = snapshot.val();

         if(lol == null)
         {
           alert("Team does not exist");
         }
         else if(lol == false)
         {
           alert("Team is full");
         }
         else {
           firebase.database().ref("FortniteWagers" + "/Teams/" + text + "/Exist/").set({
            Exist: false,

           });

           firebase.database().ref("FortniteWagers" + "/Teams/" + text + "/players/" + username).set({
             Username: username,
             Fortnite: fortnite,
             PSN: PSN,

          });

          firebase.database().ref("FortniteWagers" + "/Teams/" + text + "/Playerusernames/" + userId).set({
           Username: username,

         });

         firebase.database().ref("FortniteWagers" + "/Players/" + userId).set({
          teamcode: text,

         });

         firebase.database().ref("FortniteWagers" + "/Teams/" + text + "/playercount/").set({
          playercount: 2,

         });




      window.location.href = "versus.htm";

         }
        // ...

      });






  }

  function signout(){
    firebase.auth().signOut().then(function() {

      location.reload();
    console.log('Signed Out');
  }, function(error) {
    console.error('Sign Out Error', error);
  });
  }


  function registerteam(){
    var text = makeid();
    var userId = firebase.auth().currentUser.uid;
    var teamname = prompt("What is your team name?");

    if(teamname == null)
    {
    }
    else {




         firebase.database().ref("/FortniteWagers" + "/Teams/" + text + "/Playerids/" + userId).set({
          Username: username,

        });

        firebase.database().ref("/FortniteWagers" + "/Teams/" + text + "/players/" + username).set({
         Username: username,
         Fortnite: fortnite,
         PSN: PSN,

       });



       firebase.database().ref("/FortniteWagers" + "/Players/" + userId).set({
        teamcode: text,

       });

       firebase.database().ref("/FortniteWagers" + "/Teams/" + text + "/Exist/").set({
        Exist: true,

       });

       firebase.database().ref("/FortniteWagers" + "/Teams/" + text + "/playercount/").set({
        playercount: 1,

       });

       firebase.database().ref("/FortniteWagers" + "/Teams/" + text + "/teamname/").set({
        Teamname: teamname,

      });

        // ...
        alert("Give this code to your friends so they can join your team: " + text);
        //var teamcode = prompt("Enter your team code; Give this code to your friends so they can join your team");


          window.location.href = "versus.htm";




  }
  }

  function makeid() {
    var text = "";
    var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

    for (var i = 0; i < 10; i++)
      text += possible.charAt(Math.floor(Math.random() * possible.length));

    return text;
  }

function makepostid(){
  var text = "";
  var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

  for (var i = 0; i < 20; i++)
    text += possible.charAt(Math.floor(Math.random() * possible.length));

  return text;

}

function loadpost(){

  var btn = document.createElement("BUTTON");
  btn.innerHTML = "Accept";
                firebase.database().ref("FortniteWagers" + "/Matchmaking/").once('value',function(snap) {
                  snap.forEach(function(item) {
                  var itemVal = item.val();
                  array_name.push(itemVal);
                });
                for (i = 0; i < array_name.length; i++) {
                  btn.onclick = acceptmatch(array_name[i].teamKey);
            document.getElementById("matches").innerHTML += "Type: " + array_name[i].type + "&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp$ " + array_name[i].money +"&nbsp&nbsp&nbsp" ;
                document.getElementById("matches").appendChild(btn);
                document.getElementById("matches").innerHTML += "<br /> " ;
          }
              });
}

function acceptmatch(key){
  var teamkey = key;
  alert(teamkey);
}
function postfunc(){

var money;
while(isNaN(money))
{
   money = prompt("Wager amount; Whole dollars only.");
}


var type;
  while(type != "s" && type != "k")
  {
     type = prompt("S for survival or K for kills");

  }

  if(type == "s")
  {
    type ="Survival";
  }
  else {
    type ="Kills";
  }
var postid = makepostid();

  firebase.database().ref("/FortniteWagers" + "/Matchmaking/" + postid).set({
   teamkey: teamkey,
   type: type,
   money: money,



  });


}



  </script>
  <body onload="checkifusersignedin();" id="body">

    <div id="header">
      <br />
      <h1 class="logreg" style=""id="Username"></h1>
  <button onclick="signout();" id="signoutbut" style = "margin-left:5px;"> Sign out </button>
  <a href="profile.htm"><h1 class="logreg" style=""id="Username"></h1></a>
  <div id="menu">
     <a href="index.htm"><h3 id="one">Home     </h3></a>
      <a href="versus.htm"><h3 id="two"> Versus </h3></a>
        <a href="Rules.htm">  <h3 id="three"> Rules </h3></a>
          <a href="">  <h3 id="four"> </h3></a>
  </div>


  <br />
  <br /><br />
  <br />

  <a class="twitter-timeline"  height="600px" width="300px" href="https://twitter.com/FortniteMoney8s?ref_src=twsrc%5Etfw">Tweets by FortniteMoney8s</a> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

  <div id = "container">
    <div id="submenu">
       <a href="index.htm"><h3 id="one">Team</h3></a>
        <a href="versus.htm"><h3 id="two">Match Finder</h3></a>
          <a href="Rules.htm">  <h3 id="three"> Rules </h3></a>
            <a href="">  <h3 id="four"> </h3></a>
<Button id="teamkey" onclick="postfunc();">Post</Button>
<br /><br /><br /><br /><br />
<div id="matches"> </div>

    </div>




  </div>

  </div>
  <br />
  <div id="footer">
  </div>

    </div>
    <scipt src = "fireba.js"></script>
    <script src="https://www.gstatic.com/firebasejs/4.9.0/firebase.js"></script>
    <script>
      // Initialize Firebase
      var config = {
        apiKey: "AIzaSyAhLm5VzFkrYgmnNGvf8DP5kbQeoGNqtH0",
        authDomain: "fortnite-52f2c.firebaseapp.com",
        databaseURL: "https://fortnite-52f2c.firebaseio.com",
        projectId: "fortnite-52f2c",
        storageBucket: "",
        messagingSenderId: "143505131996"
      };
      firebase.initializeApp(config);
    </script>




  </script>
</head>

<body>

</body>

</html>
